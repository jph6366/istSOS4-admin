version: '3.8'

services:
  database:
    build:
      context: ./istSOS4/database
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATADIR: /var/lib/postgresql/data
    command: >
      postgres -c custom.versioning="${VERSIONING}" -c custom.duplicates="${DUPLICATES}" -c custom.epsg="${EPSG}" -c log_statement="all" -c log_destination="stderr"
    ports:
      - "45432:5432"
    volumes:
      - v-istsos4-database-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./istSOS4/api
      dockerfile: Dockerfile
    environment:
      HOSTNAME: ${HOSTNAME}
      SUBPATH: ${SUBPATH}
      VERSION: ${VERSION}
      DEBUG: ${DEBUG}
      VERSIONING: ${VERSIONING}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_MAX_OVERFLOW: ${PG_MAX_OVERFLOW}
      PG_POOL_SIZE: ${PG_POOL_SIZE}
      PG_POOL_TIMEOUT: ${PG_POOL_TIMEOUT}
      COUNT_MODE: ${COUNT_MODE}
      COUNT_ESTIMATE_THRESHOLD: ${COUNT_ESTIMATE_THRESHOLD}
      TOP_VALUE: ${TOP_VALUE}
      PARTITION_CHUNK: ${PARTITION_CHUNK}
      REDIS: ${REDIS}
      EPSG: ${EPSG}
    command: uvicorn --reload --host 0.0.0.0 --port 5000 app.main:app
    ports:
      - 8018:5000
    volumes:
      - ./istSOS4/api/app:/code/app
    working_dir: /code
    depends_on:
      - database
      - redis

  redis:
    image: redis:7.4.0-alpine3.20
    restart: always
    volumes:
      - v-istsos4-redis-data:/data

  dummy_data:
    build:
      context: ./istSOS4/dummy_data
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DUMMY_DATA: ${DUMMY_DATA}
      CLEAR_DATA: ${CLEAR_DATA}
      N_THINGS: ${N_THINGS}
      N_OBSERVED_PROPERTIES: ${N_OBSERVED_PROPERTIES}
      INTERVAL: ${INTERVAL}
      FREQUENCY: ${FREQUENCY}
      START_DATETIME: ${START_DATETIME}
      CHUNK_INTERVAL: ${CHUNK_INTERVAL}
      EPSG: ${EPSG}
    command: python3 generator.py
    volumes:
      - ./istSOS4/dummy_data:/dummy_data
    working_dir: /dummy_data
    depends_on:
      database:
        condition: service_healthy

  docs:
    build:
      context: ./istSOS4/docs/mkdocs
      dockerfile: dockerfile
    ports:
      - 8019:8000
    volumes:
      - ./istSOS4/docs/mkdocs:/docs

  nuxt:
    build:
      context: ./istSOS4-admin/src
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./istSOS4-admin/src:/app
    working_dir: /app
    command: npm run dev
    depends_on:
      - api

volumes:
  v-istsos4-database-data:
    name: v-istsos4-database-data
  v-istsos4-redis-data:
    name: v-istsos4-redis-data
